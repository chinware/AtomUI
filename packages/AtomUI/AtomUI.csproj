<Project Sdk="Microsoft.NET.Sdk">

    <Import Project="$(MSBuildThisFileDirectory)../../build/AtomUINativePackageInfo.props"/>

    <PropertyGroup>
        <TargetFrameworks>$(AtomUIDevelopTargetFramework);$(AtomUIProductionTargetFramework)</TargetFrameworks>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <RootNamespace>AtomUI</RootNamespace>
        <IncludeBuildOutput>true</IncludeBuildOutput>
        <Version>$(AtomUIVersion)</Version>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia"/>
        <PackageReference Include="Avalonia.Svg"/>
        <PackageReference Include="System.Reactive"/>
        <PackageReference Include="Avalonia.Fonts.Inter"/>
        <PackageReference Include="Avalonia.Desktop"/>
    </ItemGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <IncludeAssets>all</IncludeAssets>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <IncludeAssets>none</IncludeAssets>
    </PropertyGroup>
    <ItemGroup>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.Base/AtomUI.Base.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.Controls/AtomUI.Controls.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.IconPkg/AtomUI.IconPkg.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.IconPkg.AntDesign/AtomUI.IconPkg.AntDesign.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.Native/AtomUI.Native.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.Theme/AtomUI.Theme.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
        <ProjectReference Include="$(MSBuildThisFileDirectory)/../../src/AtomUI.ReactiveUI/AtomUI.ReactiveUI.csproj">
            <IncludeAssets>$(IncludeAssets)</IncludeAssets>
        </ProjectReference>
    </ItemGroup>

    <PropertyGroup>
        <AtomUIPackageOutput>$(MSBuildThisFileDirectory)../../output/bin/$(Configuration)/$(TargetFramework)</AtomUIPackageOutput>
    </PropertyGroup>

    <ItemGroup Condition=" '$(Configuration)' == 'Release' ">
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.Base.dll"/>
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.Controls.dll"/>
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.IconPkg.dll"/>
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.IconPkg.AntDesign.dll"/>
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.Theme.dll"/>
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.Native.dll"/>
        <Reference Include="$(AtomUIPackageOutput)/AtomUI.ReactiveUI.dll"/>
    </ItemGroup>

    <PropertyGroup>
		<AtomUINativeWindowsArm64Artifact>$(OutputPathWithoutFramework)/$(AtomUINativeWindowsArm64DeployPath)/$(AtomUINativeWindowsArtifactName)</AtomUINativeWindowsArm64Artifact>
        <AtomUINativeWindowsX64Artifact>$(OutputPathWithoutFramework)/$(AtomUINativeWindowsX64DeployPath)/$(AtomUINativeWindowsArtifactName)</AtomUINativeWindowsX64Artifact>
        <AtomUINativeMacOSArtifact>$(OutputPathWithoutFramework)/$(AtomUINativeMacOSDeployPath)/$(AtomUINativeMacOSArtifactName)</AtomUINativeMacOSArtifact>
        <AtomUINativeLinuxX64Artifact>$(OutputPathWithoutFramework)/$(AtomUINativeLinuxX64DeployPath)/$(AtomUINativeLinuxArtifactName)</AtomUINativeLinuxX64Artifact>
    </PropertyGroup>

    <PropertyGroup>
        <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeReferencedProjectInPackage</TargetsForTfmSpecificContentInPackage>
    </PropertyGroup>

    <Target Name="IncludeReferencedProjectInPackage" BeforeTargets="GenerateNuspec"
            Condition=" '$(Configuration)' == 'Release' ">
        <ItemGroup>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Base.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Base.pdb" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Controls.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Controls.pdb" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.IconPkg.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.IconPkg.pdb" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.IconPkg.AntDesign.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.IconPkg.AntDesign.pdb" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Theme.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Theme.pdb" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Native.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.Native.pdb" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.ReactiveUI.dll" PackagePath="lib/$(TargetFramework)"/>
            <TfmSpecificPackageFile Include="$(OutputPath)/AtomUI.ReactiveUI.pdb" PackagePath="lib/$(TargetFramework)"/>
        </ItemGroup>
    </Target>

    <ItemGroup>
        <Content Include="$(AtomUINativeMacOSArtifact)"
                 Condition="$([System.IO.File]::Exists('$(AtomUINativeMacOSArtifact)'))">
            <Link>$(AtomUINativeMacOSDeployPath)/$(AtomUINativeMacOSArtifactName)</Link>
            <PackagePath>$(AtomUINativeMacOSDeployPath)</PackagePath>
            <Pack>true</Pack>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>

		<Content Include="$(AtomUINativeWindowsArm64Artifact)"
                 Condition="$([System.IO.File]::Exists('$(AtomUINativeWindowsArm64Artifact)'))">
			<Link>$(AtomUINativeWindowsArm64DeployPath)/$(AtomUINativeWindowsArtifactName)</Link>
			<PackagePath>$(AtomUINativeWindowsArm64DeployPath)</PackagePath>
			<Pack>true</Pack>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		
        <Content Include="$(AtomUINativeWindowsX64Artifact)"
                 Condition="$([System.IO.File]::Exists('$(AtomUINativeWindowsX64Artifact)'))">
            <Link>$(AtomUINativeWindowsX64DeployPath)/$(AtomUINativeWindowsArtifactName)</Link>
            <PackagePath>$(AtomUINativeWindowsX64DeployPath)</PackagePath>
            <Pack>true</Pack>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>

        <Content Include="$(AtomUINativeLinuxX64Artifact)"
                 Condition="$([System.IO.File]::Exists('$(AtomUINativeLinuxX64Artifact)'))">
            <Link>$(AtomUINativeLinuxX64DeployPath)/$(AtomUINativeLinuxArtifactName)</Link>
            <PackagePath>$(AtomUINativeLinuxX64DeployPath)</PackagePath>
            <Pack>true</Pack>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>

    </ItemGroup>
</Project>
