<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net"
    xmlns:converters="using:AtomUI.Controls.Converters"
    x:ClassModifier="internal">
    <converters:NavMenuIsSubMenuOpenConverter x:Key="IsSubMenuOpenConverter"/>
    <ControlTheme x:Key="{x:Static atom:NavMenuThemeConstants.HorizontalNavMenuItemThemeId}"
                  TargetType="atom:NavMenuItem">
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <atom:HorizontalNavMenuItemHeader Name="{x:Static atom:NavMenuItemThemeConstants.HeaderPart}"
                                                      Icon="{TemplateBinding Icon}"
                                                      Header="{TemplateBinding Header}"
                                                      HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                                      HasSubMenu="{TemplateBinding HasSubMenu}"
                                                      IsSubMenuOpen="{TemplateBinding IsSubMenuOpen}"
                                                      IsDarkStyle="{TemplateBinding IsDarkStyle}"
                                                      IsEnabled="{TemplateBinding IsEnabled}"
                                                      IsMotionEnabled="{TemplateBinding IsMotionEnabled}"
                                                      IsSelected="{TemplateBinding SelectingItemsControl.IsSelected}"
                                                      IsTopLevel="{TemplateBinding IsTopLevel}" />
                    <atom:Popup Name="{x:Static atom:NavMenuItemThemeConstants.PopupPart}"
                                WindowManagerAddShadowHint="False"
                                IsLightDismissEnabled="False">
                        <atom:Popup.IsMotionAwareOpen>
                            <MultiBinding Converter="{StaticResource IsSubMenuOpenConverter}">
                                <Binding Path="IsSubMenuOpen" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="HasSubMenu" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </atom:Popup.IsMotionAwareOpen>
                        <Border Name="{x:Static atom:NavMenuItemThemeConstants.PopupFramePart}"
                                MinWidth="{TemplateBinding EffectivePopupMinWidth}">
                            <atom:UpDownScrollerViewer IsMotionEnabled="{TemplateBinding IsMotionEnabled}">
                                <ItemsPresenter
                                    Name="{x:Static atom:NavMenuItemThemeConstants.ItemsPresenterPart}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    Grid.IsSharedSizeScope="True"
                                    KeyboardNavigation.TabNavigation="Continue" />
                            </atom:UpDownScrollerViewer>
                        </Border>
                    </atom:Popup>
                </Panel>
            </ControlTemplate>
        </Setter>
        
        <Setter Property="PopupMinWidth" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupMinWidth}}" />
        <Style Selector="^ /template/ atom|Popup#PART_Popup">
            <Setter Property="Placement" Value="RightEdgeAlignedTop" />
            <Setter Property="MarginToAnchor"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.TopLevelItemPopupMarginToAnchor}}" />
            <Setter Property="MaskShadows"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupBoxShadows}}" />
        </Style>
        
        <Style Selector="^ /template/ Border#PART_PopupFrame">
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorBgElevated}}" />
            <Setter Property="CornerRadius"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupBorderRadius}}" />
            <Setter Property="Padding"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupContentPadding}}" />
        </Style>
        
        <Style Selector="^[IsDarkStyle=True]">
            <Style Selector="^ /template/ Border#PART_PopupFrame">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkMenuPopupBg}}" />
            </Style>
        </Style>

        <Style Selector="^[Mode=Horizontal]:toplevel">
            <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSize}}" />
            <Style Selector="^ /template/ atom|Popup#PART_Popup">
                <Setter Property="Placement" Value="Bottom" />
            </Style>

            <Style Selector="^[Mode=Horizontal]:toplevel">
                <Style Selector="^ /template/ Border#PART_PopupFrame">
                    <Setter Property="MinWidth"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupMinWidth}}" />
                    <Setter Property="MaxWidth"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupMaxWidth}}" />
                    <Setter Property="MaxHeight"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupMaxHeight}}" />
                </Style>
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>