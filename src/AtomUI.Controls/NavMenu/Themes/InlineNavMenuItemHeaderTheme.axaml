<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net"
    xmlns:themes="using:AtomUI.Controls.Themes"
    x:ClassModifier="internal">
    <atom:MarginMultiplierConverter x:Key="MarginMultiplierConverter" Left="True" />
    <ControlTheme x:Key="{x:Type atom:InlineNavMenuItemHeader}" TargetType="atom:InlineNavMenuItemHeader">
        <ControlTheme.BasedOn>
            <themes:BaseNavMenuItemHeaderTheme TargetType="atom:InlineNavMenuItemHeader" />
        </ControlTheme.BasedOn>
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="Frame"
                        Background="{TemplateBinding Background}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid>
                        <Grid.Margin>
                            <MultiBinding Converter="{StaticResource MarginMultiplierConverter}">
                                <Binding Path="Level" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="InlineItemIndentUnit"
                                         RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Grid.Margin>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="{x:Static atom:NavMenuThemeConstants.IconPresenterSizeGroup}" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="{x:Static atom:NavMenuThemeConstants.MenuIndicatorIconSizeGroup}" />
                        </Grid.ColumnDefinitions>
                        <atom:IconPresenter
                            Name="ItemIconPresenter"
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            Icon="{TemplateBinding Icon}" 
                            IsVisible="{TemplateBinding Icon, Converter={x:Static ObjectConverters.IsNotNull}}"/>
                        <ContentPresenter
                            Name="ItemTextPresenter"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding Header, Converter={x:Static atom:BaseNavMenuItemHeaderTheme.StringToTextBlockConverter}}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <Border Grid.Column="2" Name="MenuIndicatorIconFrame"
                                RenderTransform="{TemplateBinding MenuIndicatorRenderTransform}">
                            <atom:Icon
                                Name="MenuIndicatorIcon"
                                IconInfo="{atom:IconInfoProvider RightOutlined}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                IsEnabled="{TemplateBinding IsEnabled}" />
                        </Border>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
        
        <Style Selector="^:is(atom|InlineNavMenuItemHeader)">
            <Setter Property="InlineItemIndentUnit"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.InlineItemIndentUnit}}" />
            <Setter Property="MenuIndicatorRenderTransform" Value="rotate(90deg)" />
            
            <Style Selector="^ /template/ Border#MenuIndicatorIconFrame">
                <Setter Property="IsVisible" Value="True" />
            </Style>

            <Style Selector="^[IsSubMenuOpen=True]">
                <Setter Property="MenuIndicatorRenderTransform" Value="rotate(-90deg)" />
            </Style>
            
            <Style Selector="^[HasSubMenu=False]">
                <Style Selector="^ /template/ Border#MenuIndicatorIconFrame">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
            </Style>
        </Style>
        
    </ControlTheme>
</ResourceDictionary>