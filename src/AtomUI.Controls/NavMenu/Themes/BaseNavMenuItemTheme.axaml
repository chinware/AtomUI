<ControlTheme
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net"
    TargetType="atom:NavMenuItem"
    x:Class="AtomUI.Controls.Themes.BaseNavMenuItemTheme">
    <Setter Property="Template">
        <ControlTemplate TargetType="atom:NavMenuItem">
            <Panel>
                <Border Name="{x:Static atom:BaseNavMenuItemThemeConstants.HeaderDecoratorPart}">
                    <Grid Name="{x:Static atom:BaseNavMenuItemThemeConstants.MainContainerPart}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="{x:Static atom:NavMenuThemeConstants.IconPresenterSizeGroup}" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="{x:Static atom:NavMenuThemeConstants.MenuIndicatorIconSizeGroup}" />
                        </Grid.ColumnDefinitions>
                        <atom:IconPresenter
                            Name="{x:Static atom:BaseNavMenuItemThemeConstants.ItemIconPresenterPart}"
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            Icon="{TemplateBinding Icon}" />
                        <ContentPresenter
                            Name="{x:Static atom:BaseNavMenuItemThemeConstants.ItemTextPresenterPart}"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding Header, Converter={x:Static atom:BaseNavMenuItemTheme.StringToTextBlockConverter}}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <atom:Icon
                            Name="{x:Static atom:BaseNavMenuItemThemeConstants.MenuIndicatorIconPart}"
                            Grid.Column="2"
                            IconInfo="{atom:IconInfoProvider RightOutlined}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            IsEnabled="{TemplateBinding IsEnabled}" />
                    </Grid>
                </Border>
            </Panel>
        </ControlTemplate>
    </Setter>

    <Style Selector="^:is(atom|NavMenuItem)">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemColor}}" />
        <Setter Property="InlineItemIndentUnit"
                Value="{DynamicResource {x:Static atom:NavMenuTokenKey.InlineItemIndentUnit}}" />
        <Setter Property="PopupMinWidth" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuPopupMinWidth}}" />
        <Setter Property="OpenCloseMotionDuration"
                Value="{DynamicResource {x:Static atom:SharedTokenKey.MotionDurationSlow}}" />

        <Style Selector="^ /template/ atom|TextBlock#PART_InputGestureText">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.KeyGestureColor}}" />
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemMargin}}" />
        </Style>

        <Style Selector="^ /template/ ContentPresenter#PART_ItemTextPresenter">
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemMargin}}" />
        </Style>

        <!-- HeaderDecorator style begin -->
        <Style Selector="^ /template/ Border#PART_HeaderDecorator">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="MinHeight" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemHeight}}" />
            <Setter Property="Padding" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemContentPadding}}" />
            <Setter Property="CornerRadius" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemBorderRadius}}" />
        </Style>
        <!-- HeaderDecorator style end -->

        <!-- BuildNormalHeaderDecoratorStyle begin -->
        <Style Selector="^[HasSubMenu=False]">
            <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                <Setter Property="TemplatedControl.Foreground"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemColor}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemBg}}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_HeaderDecorator:pointerover">
                <Setter Property="TemplatedControl.Foreground"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemHoverColor}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemHoverBg}}" />
            </Style>
            <Style Selector="^:selected">
                <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemSelectedColor}}" />
                    <Setter Property="Background"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemSelectedBg}}" />
                </Style>
            </Style>
        </Style>
        <Style Selector="^[HasSubMenu=True]">
            <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                <Setter Property="TemplatedControl.Foreground"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemColor}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemBg}}" />
            </Style>
            <Style Selector="^ /template/ Border#PART_HeaderDecorator:pointerover">
                <Setter Property="Background" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemHoverBg}}" />
            </Style>
            <Style Selector="^:selected">
                <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemSelectedColor}}" />
                </Style>
            </Style>
        </Style>
        <!-- BuildNormalHeaderDecoratorStyle end -->

        <!-- BuildDarkHeaderDecoratorStyle begin -->
        <Style Selector="^[IsDarkStyle=True]">
            <Style Selector="^[HasSubMenu=False]">
                <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemColor}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemBg}}" />
                </Style>
                <Style Selector="^ /template/ Border#PART_HeaderDecorator:pointerover">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemHoverColor}}" />
                    <Setter Property="Background"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemHoverBg}}" />
                </Style>
                <Style Selector="^:selected">
                    <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                        <Setter Property="TemplatedControl.Foreground"
                                Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemSelectedColor}}" />
                        <Setter Property="Background"
                                Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemSelectedBg}}" />
                    </Style>
                </Style>
            </Style>
            <Style Selector="^[HasSubMenu=True]">
                <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemColor}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemBg}}" />
                </Style>
                <Style Selector="^ /template/ Border#PART_HeaderDecorator:pointerover">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemHoverColor}}" />
                </Style>
                <Style Selector="^:selected">
                    <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                        <Setter Property="TemplatedControl.Foreground"
                                Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemSelectedColor}}" />
                    </Style>
                </Style>
            </Style>
        </Style>
        <!-- BuildDarkHeaderDecoratorStyle end -->

        <!-- BuildMenuIndicatorStyle begin -->
        <Style Selector="^ /template/ atom|Icon#PART_MenuIndicatorIcon">
            <Setter Property="IsVisible" Value="True" />
            <Setter Property="NormalFilledBrush" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemColor}}" />
            <Setter Property="SelectedFilledBrush"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemSelectedColor}}" />
            <Setter Property="DisabledFilledBrush"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemDisabledColor}}" />
            <Setter Property="Width" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuArrowSize}}" />
            <Setter Property="Height" Value="{DynamicResource {x:Static atom:NavMenuTokenKey.MenuArrowSize}}" />
        </Style>

        <Style Selector="^[IsDarkStyle=True]">
            <Style Selector="^ /template/ atom|Icon#PART_MenuIndicatorIcon">
                <Setter Property="NormalFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemColor}}" />
                <Setter Property="SelectedFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemSelectedColor}}" />
                <Setter Property="DisabledFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemDisabledColor}}" />
            </Style>
        </Style>

        <Style Selector="^:selected">
            <Style Selector="^ /template/ atom|Icon#PART_MenuIndicatorIcon">
                <Setter Property="IconMode" Value="Selected" />
            </Style>
        </Style>
        <Style Selector="^[HasSubMenu=False]">
            <Style Selector="^ /template/ atom|Icon#PART_MenuIndicatorIcon">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
        <!-- BuildMenuIndicatorStyle end -->

        <!-- BuildMenuIconStyle begin -->
        <Style Selector="^ /template/ atom|IconPresenter#PART_ItemIconPresenter">
            <Setter Property="IsVisible" Value="False" />
            <Setter Property="Margin"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemMargin}}" />
            <Setter Property="IconWidth"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemIconSize}}" />
            <Setter Property="IconHeight"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemIconSize}}" />
            <Setter Property="NormalFilledBrush"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemColor}}" />
            <Setter Property="ActiveFilledBrush"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemHoverColor}}" />
            <Setter Property="SelectedFilledBrush"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemSelectedColor}}" />
            <Setter Property="DisabledFilledBrush"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemDisabledColor}}" />
        </Style>

        <Style Selector="^[IsDarkStyle=True]">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ItemIconPresenter">
                <Setter Property="NormalFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemColor}}" />
                <Setter Property="ActiveFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemHoverColor}}" />
                <Setter Property="SelectedFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemSelectedColor}}" />
                <Setter Property="DisabledFilledBrush"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemDisabledColor}}" />
            </Style>
        </Style>

        <Style Selector="^:icon">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ItemIconPresenter">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
        <!-- BuildMenuIconStyle end -->

        <Style Selector="^:disabled">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemDisabledColor}}" />
            <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                <Setter Property="TemplatedControl.Foreground"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.ItemDisabledColor}}" />
            </Style>
        </Style>

        <Style Selector="^[IsDarkStyle=True]">
            <Style Selector="^:disabled">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemDisabledColor}}" />
                <Style Selector="^ /template/ Border#PART_HeaderDecorator">
                    <Setter Property="TemplatedControl.Foreground"
                            Value="{DynamicResource {x:Static atom:NavMenuTokenKey.DarkItemDisabledColor}}" />
                </Style>
            </Style>
        </Style>

    </Style>
</ControlTheme>