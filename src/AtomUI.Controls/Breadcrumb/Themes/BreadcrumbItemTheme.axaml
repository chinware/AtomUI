<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net">
    <ControlTheme x:Key="{x:Type atom:BreadcrumbItem}" TargetType="atom:BreadcrumbItem">
        <Setter Property="Template">
            <ControlTemplate>
                <StackPanel Name="RootLayout" Orientation="Horizontal">
                    <Border Name="ContentInfoFrame"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal" Spacing="{DynamicResource {x:Static atom:SharedTokenKey.SpacingXXS}}">
                            <atom:IconPresenter Name="IconPresenter"
                                                Icon="{TemplateBinding Icon}"
                                                IsVisible="{TemplateBinding Icon, Converter={x:Static ObjectConverters.IsNotNull}}" />
                            <ContentPresenter Name="Content"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </StackPanel>
                    </Border>
                    <ContentPresenter Name="Separator"
                                      HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Foreground="{DynamicResource {x:Static atom:BreadcrumbTokenKey.SeparatorColor}}"
                                      Content="{TemplateBinding Separator}"
                                      Margin="{DynamicResource {x:Static atom:BreadcrumbTokenKey.SeparatorMargin}}"
                                      ContentTemplate="{TemplateBinding SeparatorTemplate}"
                                      IsVisible="{TemplateBinding IsLast, Converter={x:Static BoolConverters.Not}}"/>
                </StackPanel>
            </ControlTemplate>
        </Setter>
        
        <Setter Property="Padding" Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.BreadcrumbItemContentPadding}}"/>
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadius}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.ItemColor}}"/>
        
        <Style Selector="^[IsLast=True][IsNavigateResponsive=False]">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.LastItemColor}}"/>
        </Style>
        
        <Style Selector="^[IsNavigateResponsive=True]">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.LinkColor}}"/>
            
            <Style Selector="^:pointerover">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.LinkHoverBgColor}}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.LinkHoverColor}}" />
                
                <Style Selector="^ atom|IconPresenter#IconPresenter">
                    <Setter Property="NormalFilledBrush"
                            Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.LinkHoverColor}}" />
                </Style>
            </Style>
        </Style>
        
        <Style Selector="^ /template/ atom|IconPresenter#IconPresenter">
            <Setter Property="NormalFilledBrush"
                    Value="{DynamicResource {x:Static atom:BreadcrumbTokenKey.ItemColor}}" />
            <Setter Property="IconWidth"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeSM}}" />
            <Setter Property="IconHeight"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeSM}}" />
        </Style>
        
    </ControlTheme>
</ResourceDictionary>