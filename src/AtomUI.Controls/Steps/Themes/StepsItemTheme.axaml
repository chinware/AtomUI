<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net"
    x:ClassModifier="internal">
    <ControlTheme x:Key="{x:Type atom:StepsItem}" TargetType="atom:StepsItem">

        <!-- 通用样式 -->
        <Style Selector="^[IsClickable=True]">
            <Style Selector="^[IsSelected=False]">
                <Style Selector="^ /template/ DockPanel#RootLayout">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Cursor" Value="Hand" />
                </Style>
            </Style>
        </Style>
        
        <Style Selector="^ /template/ Rectangle.IndicatorLine">
            <Setter Property="Fill" Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessTailColor}}" />
        </Style>

        <Style Selector="^[Status=Wait]">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.WaitTitleColor}}" />
            <Setter Property="DescriptionForeground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.WaitDescriptionColor}}" />

            <Style Selector="^ /template/ Rectangle.IndicatorLine">
                <Setter Property="Fill"
                        Value="{DynamicResource {x:Static atom:StepsTokenKey.WaitTailColor}}" />
            </Style>
        </Style>

        <Style Selector="^[Status=Process]">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessTitleColor}}" />
            <Setter Property="DescriptionForeground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessDescriptionColor}}" />
            
            <Style Selector="^ /template/ Rectangle.IndicatorLine">
                <Setter Property="Fill"
                        Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessTailColor}}" />
            </Style>
        </Style>

        <Style Selector="^[Status=Finish]">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.FinishTitleColor}}" />
            <Setter Property="DescriptionForeground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.FinishDescriptionColor}}" />
            <Style Selector="^ /template/ Rectangle.IndicatorLine">
                <Setter Property="Fill"
                        Value="{DynamicResource {x:Static atom:StepsTokenKey.FinishTailColor}}" />
            </Style>
        </Style>

        <Style Selector="^[Status=Error]">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.ErrorTitleColor}}" />
            <Setter Property="DescriptionForeground"
                    Value="{DynamicResource {x:Static atom:StepsTokenKey.ErrorDescriptionColor}}" />
            
            <Style Selector="^ /template/ Rectangle.IndicatorLine">
                <Setter Property="Fill"
                        Value="{DynamicResource {x:Static atom:StepsTokenKey.ErrorTailColor}}" />
            </Style>
        </Style>

        <Style Selector="^[IsSelected=False]">
            
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDescription}}" />
            <Setter Property="SubTitleForeground"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDescription}}" />
            <Setter Property="DescriptionForeground"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDescription}}" />

            <Style Selector="^[IsFinished=True]">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorText}}" />
                <Setter Property="SubTitleForeground"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDescription}}" />
                <Setter Property="DescriptionForeground"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDescription}}" />
            </Style>

            <Style Selector="^[IsClickable=True]">
                <Style Selector="^:pointerover">
                    <Style Selector="^:not(^[Status=Process])">
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessIconBorderColor}}" />
                        <Setter Property="SubTitleForeground"
                                Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessIconBorderColor}}" />
                        <Setter Property="DescriptionForeground"
                                Value="{DynamicResource {x:Static atom:StepsTokenKey.ProcessIconBorderColor}}" />
                    </Style>
                </Style>
            </Style>

        </Style>

        <Style Selector="^[IsSelected=True]">
            <Setter Property="SubTitleForeground"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDescription}}" />
        </Style>

        <Style Selector="^[Style=Default]">
            <!-- 普通样式风格模板对应的通用样式 -->
            <Style Selector="^ /template/ StackPanel#HeaderLayout">
                <Setter Property="Spacing" Value="{DynamicResource {x:Static atom:SharedTokenKey.SpacingXS}}" />
            </Style>

            <Style Selector="^[SizeType=Large]">
                <Style Selector="^ /template/ StackPanel#HeaderLayout">
                    <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeight}}" />
                </Style>
            </Style>
            <Style Selector="^[SizeType=Middle]">
                <Style Selector="^ /template/ StackPanel#HeaderLayout">
                    <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeight}}" />
                </Style>
            </Style>

            <Style Selector="^[SizeType=Small]">

                <Style Selector="^ /template/ StackPanel#HeaderLayout">
                    <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static atom:StepsTokenKey.IconSizeSM}}" />
                </Style>
            </Style>

            <Style Selector="^ /template/ ContentPresenter#SubHeaderPresenter">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSize}}" />
            </Style>

            <Style Selector="^ /template/ ContentPresenter#DescriptionPresenter">
                <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSize}}" />
            </Style>

            <Style Selector="^[SizeType=Large]">
                <Style Selector="^ /template/ ContentPresenter#HeaderPresenter">
                    <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSizeLG}}" />
                </Style>
            </Style>

            <Style Selector="^[SizeType=Middle]">
                <Style Selector="^ /template/ ContentPresenter#HeaderPresenter">
                    <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSizeLG}}" />
                </Style>
            </Style>

            <Style Selector="^[SizeType=Small]">
                <Style Selector="^ /template/ ContentPresenter#HeaderPresenter">
                    <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSize}}" />
                </Style>
            </Style>

            <!-- 普通样式水平风格模板 -->
            <Style Selector="^[Orientation=Horizontal]">
                <!-- 默认指示器类型 -->
                <Style Selector="^[IndicatorType=Default]">
                    <Style Selector="^[LabelPlacement=Horizontal]">
                        <Setter Property="Template">
                            <ControlTemplate>
                                <DockPanel LastChildFill="True" Name="RootLayout">
                                    <atom:StepsItemIndicator DockPanel.Dock="Left"
                                                             Name="{x:Static atom:StepsItemThemeConstants.IndicatorPart}"
                                                             IndicatorType="{TemplateBinding IndicatorType}"
                                                             IsCurrent="{TemplateBinding IsSelected}"
                                                             IsClickable="{TemplateBinding IsClickable}"
                                                             SizeType="{TemplateBinding SizeType}"
                                                             Position="{TemplateBinding Position}"
                                                             Icon="{TemplateBinding Icon}"
                                                             VerticalAlignment="Top"
                                                             Status="{TemplateBinding Status}"
                                                             IsMotionEnabled="{TemplateBinding IsMotionEnabled}" />
                                    <StackPanel Orientation="Vertical">
                                        <DockPanel LastChildFill="True">
                                            <StackPanel Orientation="Horizontal"
                                                        Name="HeaderLayout"
                                                        DockPanel.Dock="Left">
                                                <ContentPresenter
                                                    Name="HeaderPresenter"
                                                    Content="{TemplateBinding Header}"
                                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    VerticalAlignment="Center" />
                                                <ContentPresenter
                                                    Name="SubHeaderPresenter"
                                                    Content="{TemplateBinding SubHeader}"
                                                    ContentTemplate="{TemplateBinding SubHeaderTemplate}"
                                                    Foreground="{TemplateBinding SubTitleForeground}"
                                                    VerticalAlignment="Center"
                                                    IsVisible="{TemplateBinding SubHeader, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                            </StackPanel>
                                            <Rectangle Name="SeparatorLine"
                                                       Classes="IndicatorLine"
                                                       Height="1"
                                                       VerticalAlignment="Center"
                                                       IsVisible="{TemplateBinding IsLast, Converter={x:Static BoolConverters.Not}}" />
                                        </DockPanel>
                                        <ContentPresenter
                                            Name="DescriptionPresenter"
                                            Foreground="{TemplateBinding DescriptionForeground}"
                                            Content="{TemplateBinding Description}"
                                            ContentTemplate="{TemplateBinding DescriptionTemplate}" />
                                    </StackPanel>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter>

                        <Style Selector="^ /template/ DockPanel#RootLayout">
                            <Setter Property="HorizontalSpacing"
                                    Value="{DynamicResource {x:Static atom:SharedTokenKey.SpacingXS}}" />
                        </Style>

                        <Style Selector="^ /template/ StackPanel#HeaderLayout">
                            <Setter Property="Margin"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.HorizontalHeaderMargin}}" />
                        </Style>
                    </Style>

                    <Style Selector="^[LabelPlacement=Vertical]">
                        <Setter Property="Template">
                            <ControlTemplate>

                            </ControlTemplate>
                        </Setter>
                    </Style>
                </Style>
                <!-- 点指示器类型 -->
                <Style Selector="^[IndicatorType=Dot]">
                    <Style Selector="^[Orientation=Horizontal]">
                        <Setter Property="Template">
                            <ControlTemplate>
                                <DockPanel LastChildFill="True" Name="RootLayout">
                                    <StackPanel Orientation="Vertical" DockPanel.Dock="Left">
                                        <Grid Name="IndicatorLayout" VerticalAlignment="Top"
                                              ColumnDefinitions="*, Auto, *">
                                            <Rectangle Name="BeginningSeparatorLine"
                                                       Classes="IndicatorLine"
                                                       VerticalAlignment="Center"
                                                       IsVisible="{TemplateBinding IsFirst, Converter={x:Static BoolConverters.Not}}"
                                                       Grid.Column="0" />
                                            <atom:StepsItemIndicator Name="{x:Static atom:StepsItemThemeConstants.IndicatorPart}"
                                                                     IndicatorType="{TemplateBinding IndicatorType}"
                                                                     UseLayoutRounding="False"
                                                                     SizeType="{TemplateBinding SizeType}"
                                                                     Position="{TemplateBinding Position}"
                                                                     Icon="{TemplateBinding Icon}"
                                                                     IsCurrent="{TemplateBinding IsSelected}"
                                                                     IsClickable="{TemplateBinding IsClickable}"
                                                                     VerticalAlignment="Center"
                                                                     Status="{TemplateBinding Status}"
                                                                     IsMotionEnabled="{TemplateBinding IsMotionEnabled}"
                                                                     Grid.Column="1" />
                                            <Rectangle Name="EndingSeparatorLine"
                                                       Classes="IndicatorLine"
                                                       VerticalAlignment="Center"
                                                       IsVisible="{TemplateBinding IsLast, Converter={x:Static BoolConverters.Not}}"
                                                       Grid.Column="2" />
                                        </Grid>
                                        <StackPanel Orientation="Horizontal" Name="HeaderLayout"
                                                    HorizontalAlignment="Center">
                                            <ContentPresenter
                                                Name="HeaderPresenter"
                                                Content="{TemplateBinding Header}"
                                                Foreground="{TemplateBinding Foreground}"
                                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                VerticalAlignment="Center" />
                                            <ContentPresenter
                                                Name="SubHeaderPresenter"
                                                Content="{TemplateBinding SubHeader}"
                                                ContentTemplate="{TemplateBinding SubHeaderTemplate}"
                                                Foreground="{TemplateBinding SubTitleForeground}"
                                                VerticalAlignment="Center"
                                                IsVisible="{TemplateBinding SubHeader, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                        </StackPanel>
                                        <ContentPresenter
                                            Name="DescriptionPresenter"
                                            Content="{TemplateBinding Description}"
                                            Foreground="{TemplateBinding DescriptionForeground}"
                                            ContentTemplate="{TemplateBinding DescriptionTemplate}"
                                            TextAlignment="Center" />
                                    </StackPanel>
                                    <Panel Name="TailLineLayout" VerticalAlignment="Top">
                                        <Rectangle Name="TailSeparatorLine"
                                                   Classes="IndicatorLine"
                                                   VerticalAlignment="Center"
                                                   IsVisible="{TemplateBinding IsLast, Converter={x:Static BoolConverters.Not}}" />
                                    </Panel>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter>

                        <Style Selector="^ /template/ Panel#TailLineLayout">
                            <Setter Property="Height"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.DotCurrentSize}}" />
                        </Style>

                        <Style Selector="^ /template/ Rectangle#TailSeparatorLine">
                            <Setter Property="Height"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.DotLineThickness}}" />
                        </Style>

                        <Style Selector="^ /template/ Rectangle#BeginningSeparatorLine">
                            <Setter Property="Height"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.DotLineThickness}}" />
                        </Style>

                        <Style Selector="^ /template/ Rectangle#EndingSeparatorLine">
                            <Setter Property="Height"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.DotLineThickness}}" />
                        </Style>

                        <Style Selector="^ /template/ Grid#IndicatorLayout">
                            <Setter Property="Height"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.DotCurrentSize}}" />
                        </Style>

                        <Style Selector="^ /template/ atom|StepsItemIndicator">
                            <Setter Property="Margin"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.HorizontalDotMargin}}" />
                        </Style>

                        <Style Selector="^[Status=Process]">
                            <Style Selector="^ /template/ Rectangle#BeginningSeparatorLine">
                                <Setter Property="Fill"
                                        Value="{DynamicResource {x:Static atom:StepsTokenKey.FinishTailColor}}" />
                            </Style>
                        </Style>
                        <Style Selector="^ /template/ StackPanel#HeaderLayout">
                            <Setter Property="Margin"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.VerticalLabelContentMargin}}" />
                        </Style>

                        <Style Selector="^ /template/ StackPanel#ContentLayout">
                            <Setter Property="MaxWidth"
                                    Value="{DynamicResource {x:Static atom:StepsTokenKey.DescriptionMaxWidth}}" />
                        </Style>

                    </Style>
                </Style>

            </Style>
            <!-- 普通样式垂直风格模板 -->
            <Style Selector="^[Orientation=Vertical]">
                <!-- 普通指示器类型 -->
                <Style Selector="^[IndicatorType=Default]">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <DockPanel LastChildFill="True" Name="RootLayout">
                                <DockPanel DockPanel.Dock="Left" LastChildFill="True" Name="IndicatorLayout">
                                    <atom:StepsItemIndicator
                                        DockPanel.Dock="Top"
                                        Name="{x:Static atom:StepsItemThemeConstants.IndicatorPart}"
                                        IndicatorType="{TemplateBinding IndicatorType}"
                                        IsCurrent="{TemplateBinding IsSelected}"
                                        IsClickable="{TemplateBinding IsClickable}"
                                        SizeType="{TemplateBinding SizeType}"
                                        Position="{TemplateBinding Position}"
                                        Icon="{TemplateBinding Icon}"
                                        VerticalAlignment="Top"
                                        Status="{TemplateBinding Status}"
                                        IsMotionEnabled="{TemplateBinding IsMotionEnabled}" />
                                    <Rectangle Name="SeparatorLine"
                                               Classes="IndicatorLine"
                                               Width="1"
                                               HorizontalAlignment="Center"
                                               IsVisible="{TemplateBinding IsLast, Converter={x:Static BoolConverters.Not}}" />
                                </DockPanel>
                                <StackPanel Orientation="Vertical" Name="ContentLayout">
                                    <StackPanel Orientation="Horizontal" Name="HeaderLayout">
                                        <ContentPresenter
                                            Name="HeaderPresenter"
                                            Foreground="{TemplateBinding Foreground}"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            TextWrapping="Wrap"
                                            VerticalAlignment="Center" />
                                        <ContentPresenter
                                            Name="SubHeaderPresenter"
                                            Foreground="{TemplateBinding SubTitleForeground}"
                                            Content="{TemplateBinding SubHeader}"
                                            ContentTemplate="{TemplateBinding SubHeaderTemplate}"
                                            VerticalAlignment="Center"
                                            TextWrapping="Wrap"
                                            IsVisible="{TemplateBinding SubHeader, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                    </StackPanel>
                                    <ContentPresenter
                                        Name="DescriptionPresenter"
                                        Foreground="{TemplateBinding DescriptionForeground}"
                                        Content="{TemplateBinding Description}"
                                        ContentTemplate="{TemplateBinding DescriptionTemplate}"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter>

                    <Style Selector="^ /template/ DockPanel#IndicatorLayout">
                        <Setter Property="VerticalSpacing"
                                Value="{DynamicResource {x:Static atom:StepsTokenKey.VerticalItemSpacing}}" />
                    </Style>

                    <Style Selector="^ /template/ DockPanel#RootLayout">
                        <Setter Property="HorizontalSpacing"
                                Value="{DynamicResource {x:Static atom:SharedTokenKey.Spacing}}" />
                    </Style>

                    <Style Selector="^ /template/ ContentPresenter#DescriptionPresenter">
                        <Setter Property="Padding"
                                Value="{DynamicResource {x:Static atom:StepsTokenKey.VerticalDescriptionPadding}}" />
                    </Style>
                </Style>
                <!-- 点指示器类型 -->
                <Style Selector="^[IndicatorType=Dot]">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <DockPanel LastChildFill="True" Name="RootLayout">
                                <DockPanel DockPanel.Dock="Left" LastChildFill="True" Name="IndicatorLayout">
                                    <Panel DockPanel.Dock="Top" Name="ItemIndicatorLayout">
                                        <atom:StepsItemIndicator
                                            Name="{x:Static atom:StepsItemThemeConstants.IndicatorPart}"
                                            IndicatorType="{TemplateBinding IndicatorType}"
                                            IsCurrent="{TemplateBinding IsSelected}"
                                            IsClickable="{TemplateBinding IsClickable}"
                                            SizeType="{TemplateBinding SizeType}"
                                            Position="{TemplateBinding Position}"
                                            Icon="{TemplateBinding Icon}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Status="{TemplateBinding Status}"
                                            IsMotionEnabled="{TemplateBinding IsMotionEnabled}" />
                                    </Panel>
                                    <Rectangle Name="SeparatorLine"
                                               Classes="IndicatorLine"
                                               Width="1"
                                               HorizontalAlignment="Center"
                                               IsVisible="{TemplateBinding IsLast, Converter={x:Static BoolConverters.Not}}" />
                                </DockPanel>
                                <StackPanel Orientation="Vertical" Name="ContentLayout">
                                    <StackPanel Orientation="Horizontal" Name="HeaderLayout">
                                        <ContentPresenter
                                            Name="HeaderPresenter"
                                            Foreground="{TemplateBinding Foreground}"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            TextWrapping="Wrap"
                                            VerticalAlignment="Center" />
                                        <ContentPresenter
                                            Name="SubHeaderPresenter"
                                            Foreground="{TemplateBinding SubTitleForeground}"
                                            Content="{TemplateBinding SubHeader}"
                                            ContentTemplate="{TemplateBinding SubHeaderTemplate}"
                                            VerticalAlignment="Center"
                                            TextWrapping="Wrap"
                                            IsVisible="{TemplateBinding SubHeader, Converter={x:Static ObjectConverters.IsNotNull}}" />
                                    </StackPanel>
                                    <ContentPresenter
                                        Name="DescriptionPresenter"
                                        Foreground="{TemplateBinding DescriptionForeground}"
                                        Content="{TemplateBinding Description}"
                                        ContentTemplate="{TemplateBinding DescriptionTemplate}"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter>

                    <Style Selector="^ /template/ DockPanel#IndicatorLayout">
                        <Setter Property="Width" Value="{DynamicResource {x:Static atom:StepsTokenKey.DotCurrentSize}}" />
                    </Style>

                    <Style Selector="^[SizeType=Large]">
                        <Style Selector="^ /template/ Panel#ItemIndicatorLayout">
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeight}}" />
                        </Style>
                    </Style>
                    <Style Selector="^[SizeType=Middle]">
                        <Style Selector="^ /template/ Panel#ItemIndicatorLayout">
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeight}}" />
                        </Style>
                    </Style>

                    <Style Selector="^[SizeType=Small]">
                        <Style Selector="^ /template/ DockPanel#ItemIndicatorLayout">
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static atom:StepsTokenKey.IconSizeSM}}" />
                        </Style>
                    </Style>
                    
                    <Style Selector="^ /template/ ContentPresenter#DescriptionPresenter">
                        <Setter Property="Padding"
                                Value="{DynamicResource {x:Static atom:StepsTokenKey.VerticalDescriptionPadding}}" />
                    </Style>
                    
                    <Style Selector="^ /template/ DockPanel#RootLayout">
                        <Setter Property="HorizontalSpacing"
                                Value="{DynamicResource {x:Static atom:SharedTokenKey.Spacing}}" />
                    </Style>
                    
                </Style>
            </Style>
        </Style>

        <Style Selector="^[Style=Navigation]">
            <Style Selector="^[LabelPlacement=Horizontal]">
                <Setter Property="Template">
                    <ControlTemplate>
                    </ControlTemplate>
                </Setter>
            </Style>

            <Style Selector="^[LabelPlacement=Vertical]">
                <Setter Property="Template">
                    <ControlTemplate>
                    </ControlTemplate>
                </Setter>
            </Style>
        </Style>

        <Style Selector="^[Style=Inline]">
            <Setter Property="Template">
                <ControlTemplate>
                </ControlTemplate>
            </Setter>
        </Style>

    </ControlTheme>
</ResourceDictionary>