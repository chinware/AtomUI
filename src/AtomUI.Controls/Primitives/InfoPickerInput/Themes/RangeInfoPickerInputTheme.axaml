<ControlTheme
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net"
    xmlns:themes="using:AtomUI.Controls.Primitives.Themes"
    x:Class="AtomUI.Controls.Primitives.Themes.RangeInfoPickerInputTheme"
    TargetType="atom:RangeInfoPickerInput">
    <ControlTheme.BasedOn>
        <themes:InfoPickerInputTheme TargetType="atom:RangeInfoPickerInput" />
    </ControlTheme.BasedOn>
    <Setter Property="Template">
        <ControlTemplate TargetType="atom:RangeInfoPickerInput">
            <Panel>
                <atom:AddOnDecoratedBox
                    Name="{x:Static atom:InfoPickerInputThemeConstants.DecoratedBoxPart}"
                    Focusable="True"
                    IsEnabled="{TemplateBinding IsEnabled}"
                    MinWidth="{TemplateBinding MinWidth}"
                    StyleVariant="{TemplateBinding StyleVariant}"
                    SizeType="{TemplateBinding SizeType}"
                    Status="{TemplateBinding Status}"
                    LeftAddOn="{TemplateBinding LeftAddOn}"
                    RightAddOn="{TemplateBinding RightAddOn}">
                    <atom:AddOnDecoratedInnerBox Name="{x:Static atom:InfoPickerInputThemeConstants.PickerInnerPart}"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"
                                                 LeftAddOnContent="{TemplateBinding InnerLeftContent}"
                                                 StyleVariant="{TemplateBinding StyleVariant}"
                                                 Status="{TemplateBinding Status}"
                                                 SizeType="{TemplateBinding SizeType}"
                                                 IsEnabled="{TemplateBinding IsEnabled}">
                        <atom:AddOnDecoratedInnerBox.RightAddOnContent>
                            <atom:PickerClearUpButton
                                Name="{x:Static atom:InfoPickerInputThemeConstants.ClearUpButtonPart}" />
                        </atom:AddOnDecoratedInnerBox.RightAddOnContent>
                        <Grid ColumnDefinitions="*, Auto, *">
                            <atom:TextBox Name="{x:Static atom:InfoPickerInputThemeConstants.InfoInputBoxPart}"
                                          Grid.Column="0"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Center"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          BorderThickness="0"
                                          TextWrapping="NoWrap"
                                          AcceptsReturn="False"
                                          EmbedMode="True"
                                          IsEnableClearButton="False"
                                          IsEnableRevealButton="False"
                                          DataValidationErrors.Errors="{TemplateBinding DataValidationErrors.Errors}"
                                          Foreground="{TemplateBinding InputTextBrush}"
                                          SizeType="{TemplateBinding SizeType}"
                                          IsReadOnly="{TemplateBinding IsReadOnly}"
                                          Text="{TemplateBinding Text}"
                                          Watermark="{TemplateBinding Watermark}" />
                            <atom:Icon Name="{x:Static atom:RangeInfoPickerInputThemeConstants.RangePickerArrowPart}"
                                       IconInfo="{atom:IconInfoProvider SwapRightOutlined}"
                                       Grid.Column="1" />
                            <atom:TextBox
                                Name="{x:Static atom:RangeInfoPickerInputThemeConstants.SecondaryInfoInputBoxPart}"
                                Grid.Column="2"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                BorderThickness="0"
                                TextWrapping="NoWrap"
                                AcceptsReturn="False"
                                EmbedMode="True"
                                IsEnableClearButton="False"
                                IsEnableRevealButton="False"
                                DataValidationErrors.Errors="{TemplateBinding DataValidationErrors.Errors}"
                                Foreground="{TemplateBinding InputTextBrush}"
                                SizeType="{TemplateBinding SizeType}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Text="{TemplateBinding SecondaryText}"
                                Watermark="{TemplateBinding SecondaryWatermark}" />

                        </Grid>
                    </atom:AddOnDecoratedInnerBox>
                </atom:AddOnDecoratedBox>

                <Canvas>
                    <Rectangle Name="{x:Static atom:RangeInfoPickerInputThemeConstants.RangePickerIndicatorPart}"
                               Opacity="0" />
                </Canvas>
            </Panel>
        </ControlTemplate>
    </Setter>

    <Style Selector="^:is(atom|RangeInfoPickerInput)">
        <Style Selector="^ /template/ atom|Icon#PART_RangePickerArrow">
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:InfoPickerInputTokenKey.RangePickerArrowMargin}}" />
            <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            <Setter Property="Width" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            <Setter Property="NormalFilledBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextQuaternary}}" />
        </Style>
        
        <Style Selector="^ /template/ Rectangle#PART_RangePickerIndicator">
            <Setter Property="Height" Value="{DynamicResource {x:Static atom:InfoPickerInputTokenKey.RangePickerIndicatorThickness}}" />
        </Style>
        
        <Style Selector="^[Status=Default]">
            <Style Selector="^ /template/ Rectangle#PART_RangePickerIndicator">
                <Setter Property="Fill" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorPrimary}}" />
            </Style>
        </Style>
        
        <Style Selector="^[Status=Error]">
            <Style Selector="^ /template/ Rectangle#PART_RangePickerIndicator">
                <Setter Property="Fill" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorError}}" />
            </Style>
        </Style>
       
        <Style Selector="^[Status=Warning]">
            <Style Selector="^ /template/ Rectangle#PART_RangePickerIndicator">
                <Setter Property="Fill" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorWarning}}" />
            </Style>
        </Style>
        
    </Style>
</ControlTheme>