<ControlTheme xmlns="https://github.com/avaloniaui"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:atom="https://atomui.net"
              x:Class="AtomUI.Controls.Themes.BaseButtonTheme"
              TargetType="atom:Button">
    <Setter Property="Template">
        <ControlTemplate TargetType="atom:Button">
            <Border Name="{x:Static atom:ButtonThemeConstants.FramePart}"
                    Padding="{TemplateBinding Padding}"
                    BorderThickness="{TemplateBinding EffectiveBorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BackgroundSizing="{TemplateBinding BackgroundSizing}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <DockPanel Name="{x:Static atom:ButtonThemeConstants.RootLayoutPart}"
                           LastChildFill="True">
                    <StackPanel Name="{x:Static atom:ButtonThemeConstants.MainInfoLayoutPart}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <atom:Icon Name="{x:Static atom:ButtonThemeConstants.LoadingIconPart}"
                                   IconInfo="{atom:IconInfoProvider LoadingOutlined}"
                                   Margin="{Binding (atom:IconPresenter.Margin), 
                                   ElementName={x:Static atom:ButtonThemeConstants.ButtonIconPart}}" />
                        <atom:IconPresenter
                            Name="{x:Static atom:ButtonThemeConstants.ButtonIconPart}"
                            Icon="{TemplateBinding Icon}"
                            IsVisible="{TemplateBinding Icon, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        <atom:TextBlock
                            Name="{x:Static atom:ButtonThemeConstants.LabelPart}"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding Content}" />
                    </StackPanel>
                </DockPanel>
            </Border>
        </ControlTemplate>
    </Setter>

    <Style Selector="^:is(atom|Button)">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="DefaultShadow" Value="{DynamicResource {x:Static atom:ButtonTokenKey.DefaultShadow}}" />
        <Setter Property="PrimaryShadow" Value="{DynamicResource {x:Static atom:ButtonTokenKey.PrimaryShadow}}" />
        <Setter Property="DangerShadow" Value="{DynamicResource {x:Static atom:ButtonTokenKey.DangerShadow}}" />

        <!-- BuildSizeStyle 开始 -->
        <Style Selector="^[SizeType=Large]">
            <Style Selector="^ /template/ Border#PART_Frame">
                <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeightLG}}" />
            </Style>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:ButtonTokenKey.ContentFontSizeLG}}" />
            <Setter Property="CornerRadius" Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadiusLG}}" />
            <Style Selector="^:not(^[Shape=Circle])">
                <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.PaddingLG}}" />
            </Style>
            <Style Selector="^:icononly">
                <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.IconOnyPaddingLG}}" />
            </Style>
        </Style>

        <Style Selector="^[SizeType=Middle]">
            <Style Selector="^ /template/ Border#PART_Frame">
                <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeight}}" />
            </Style>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:ButtonTokenKey.ContentFontSize}}" />
            <Setter Property="CornerRadius" Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadius}}" />
            <Style Selector="^:not(^[Shape=Circle])">
                <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.Padding}}" />
            </Style>
            <Style Selector="^:icononly">
                <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.IconOnyPadding}}" />
            </Style>
        </Style>

        <Style Selector="^[SizeType=Small]">
            <Style Selector="^ /template/ Border#PART_Frame">
                <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.ControlHeightSM}}" />
            </Style>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:ButtonTokenKey.ContentFontSizeSM}}" />
            <Setter Property="CornerRadius" Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadiusSM}}" />
            <Style Selector="^:not(^[Shape=Circle])">
                <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.PaddingSM}}" />
            </Style>
            <Style Selector="^:icononly">
                <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.IconOnyPaddingSM}}" />
            </Style>
        </Style>
        <!-- BuildSizeStyle 结束 -->

        <!-- BuildIconStyle 开始 -->
        <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
            <Setter Property="IconMode" Value="Normal" />
        </Style>

        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IconMode" Value="Active" />
            </Style>
        </Style>

        <Style Selector="^:pressed">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IconMode" Value="Selected" />
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IconMode" Value="Disabled" />
            </Style>
            <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="IconMode" Value="Disabled" />
            </Style>
        </Style>

        <!--  text 和 icon 都存在的情况 -->
        <Style Selector="^[SizeType=Large]">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IconWidth" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeLG}}" />
                <Setter Property="IconHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeLG}}" />
            </Style>
            <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="Width" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeLG}}" />
                <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeLG}}" />
            </Style>
        </Style>
        <Style Selector="^[SizeType=Middle]">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IconWidth" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
                <Setter Property="IconHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            </Style>
            <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="Width" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
                <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            </Style>
        </Style>
        <Style Selector="^[SizeType=Small]">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IconWidth" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeSM}}" />
                <Setter Property="IconHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeSM}}" />
            </Style>
            <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="Width" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeSM}}" />
                <Setter Property="Height" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSizeSM}}" />
            </Style>
        </Style>

        <Style Selector="^:icononly">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon, ^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="Margin" Value="0" />
            </Style>
            <Style Selector="^[SizeType=Large]">
                <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                    <Setter Property="IconWidth"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeLG}}" />
                    <Setter Property="IconHeight"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeLG}}" />
                </Style>
                <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                    <Setter Property="Width"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeLG}}" />
                    <Setter Property="Height"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeLG}}" />
                </Style>
            </Style>
            <Style Selector="^[SizeType=Middle]">
                <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                    <Setter Property="IconWidth"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSize}}" />
                    <Setter Property="IconHeight"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSize}}" />
                </Style>
                <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                    <Setter Property="Width"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSize}}" />
                    <Setter Property="Height"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSize}}" />
                </Style>
            </Style>
            <Style Selector="^[SizeType=Small]">
                <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                    <Setter Property="IconWidth"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeSM}}" />
                    <Setter Property="IconHeight"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeSM}}" />
                </Style>
                <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                    <Setter Property="Width"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeSM}}" />
                    <Setter Property="Height"
                            Value="{DynamicResource {x:Static atom:ButtonTokenKey.OnlyIconSizeSM}}" />
                </Style>
            </Style>
        </Style>

        <Style Selector="^:not(:icononly)">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon, ^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="Margin" Value="{DynamicResource {x:Static atom:ButtonTokenKey.IconMargin}}" />
            </Style>
        </Style>

        <!-- icon 的各种颜色 -->
        <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
            <Setter Property="NormalFilledBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextSecondary}}"/>
            <Setter Property="ActiveFilledBrush" Value="{DynamicResource {x:Static atom:ButtonTokenKey.DefaultHoverColor}}"/>
            <Setter Property="SelectedFilledBrush" Value="{DynamicResource {x:Static atom:ButtonTokenKey.DefaultActiveColor}}"/>
            <Setter Property="DisabledFilledBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDisabled}}"/>
        </Style>
        <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
            <Setter Property="NormalFilledBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextSecondary}}"/>
            <Setter Property="ActiveFilledBrush" Value="{DynamicResource {x:Static atom:ButtonTokenKey.DefaultHoverColor}}"/>
            <Setter Property="SelectedFilledBrush" Value="{DynamicResource {x:Static atom:ButtonTokenKey.DefaultActiveColor}}"/>
            <Setter Property="DisabledFilledBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDisabled}}"/>
        </Style>

        <!-- BuildIconStyle 结束 -->

        <!-- BuildLoadingStyle 开始 -->
        <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
            <Setter Property="IsVisible" Value="True" />
        </Style>
        <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^:loading">
            <Style Selector="^ /template/ atom|IconPresenter#PART_ButtonIcon">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ atom|Icon#PART_LoadingIcon">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="LoadingAnimation" Value="Spin" />
            </Style>
            <Setter Property="Opacity" Value="{DynamicResource {x:Static atom:SharedTokenKey.OpacityLoading}}" />
        </Style>
        <!-- BuildLoadingStyle 结束 -->

        <!-- BuildShapeStyle -->
        <Style Selector="^[Shape=Circle]">
            <Setter Property="Padding" Value="{DynamicResource {x:Static atom:ButtonTokenKey.CirclePadding}}" />
        </Style>
        <!-- BuildShapeStyle -->

        <Style Selector="^:disabled">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDisabled}}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource {x:Static atom:ButtonTokenKey.BorderColorDisabled}}" />

            <Style Selector="^/template/ Border#PART_Frame">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorBgContainerDisabled}}" />
            </Style>
        </Style>
    </Style>

</ControlTheme>