<ControlTheme xmlns="https://github.com/avaloniaui"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:atom="https://atomui.net"
              x:Class="AtomUI.Controls.Themes.IconButtonTheme"
              TargetType="atom:IconButton"
              x:ClassModifier="internal">
    <Setter Property="Template">
        <ControlTemplate TargetType="atom:IconButton">
            <Border
                Name="{x:Static atom:IconButtonThemeConstants.FramePart}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                Background="{TemplateBinding Background}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Padding="{TemplateBinding Padding}">
                <atom:IconPresenter
                    Name="{x:Static atom:IconButtonThemeConstants.IconContentPart}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Icon="{TemplateBinding Icon}"
                    LoadingAnimation="{TemplateBinding LoadingAnimation}"
                    LoadingAnimationDuration="{TemplateBinding LoadingAnimationDuration}"
                    IconWidth="{TemplateBinding IconWidth}"
                    IconHeight="{TemplateBinding IconHeight}"
                    IconMode="{TemplateBinding atom:IconButton.IconMode}"
                    NormalFilledBrush="{TemplateBinding NormalIconBrush}"
                    ActiveFilledBrush="{TemplateBinding ActiveIconBrush}"
                    SelectedFilledBrush="{TemplateBinding SelectedIconBrush}"
                    DisabledFilledBrush="{TemplateBinding DisabledIconBrush}" />
            </Border>
        </ControlTemplate>
    </Setter>

    <Style Selector="^:is(atom|IconButton)">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadiusSM}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsMotionEnabled" Value="{DynamicResource {x:Static atom:SharedTokenKey.EnableMotion}}" />
        <Style Selector="^[IsEnableHoverEffect=True]">
            <Style Selector="^:pointerover">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorBgTextHover}}" />
            </Style>

            <Style Selector="^:pressed">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorBgTextActive}}" />
            </Style>
        </Style>

        <Style Selector="^ /template/ atom|IconPresenter#PART_IconContent">
            <Setter Property="IconMode" Value="Normal" />
        </Style>

        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ atom|IconPresenter#PART_IconContent">
                <Setter Property="IconMode" Value="Active" />
            </Style>
        </Style>

        <Style Selector="^:pressed">
            <Style Selector="^ /template/ atom|IconPresenter#PART_IconContent">
                <Setter Property="IconMode" Value="Selected" />
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ atom|IconPresenter#PART_IconContent">
                <Setter Property="IconMode" Value="Disabled" />
            </Style>
        </Style>
    </Style>

</ControlTheme>