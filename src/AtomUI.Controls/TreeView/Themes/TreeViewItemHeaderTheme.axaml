<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:atom="https://atomui.net"
    x:ClassModifier="internal">
    <ControlTheme x:Key="{x:Type atom:TreeViewItemHeader}" TargetType="atom:TreeViewItemHeader">
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="{x:Static atom:TreeViewItemHeaderThemeConstants.FramePart}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Background="{TemplateBinding Background}">
                    <Grid Name="ItemsLayout"
                          ColumnDefinitions="Auto, Auto, Auto, *"
                          Margin="{TemplateBinding Level, Mode=OneWay, Converter={x:Static atom:TreeViewItemTheme.MarginMultiplierConverter}}">
                        <atom:NodeSwitcherButton
                            Name="{x:Static atom:TreeViewItemHeaderThemeConstants.NodeSwitcherButtonPart}"
                            Grid.Column="0"
                            Focusable="False"
                            IsMotionEnabled="{TemplateBinding IsMotionEnabled}"
                            IconMode="{TemplateBinding SwitcherMode}"
                            CollapseIcon="{TemplateBinding SwitcherCollapseIcon}"
                            ExpandIcon="{TemplateBinding SwitcherExpandIcon}"
                            LoadingIcon="{TemplateBinding SwitcherLoadingIcon}"
                            LeafIcon="{TemplateBinding SwitcherLeafIcon}"
                            IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
                            IsLoading="{TemplateBinding IsLoading}" />

                        <atom:CheckBox Name="ToggleCheckbox"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Grid.Column="1"
                                       IsChecked="{TemplateBinding IsChecked, Mode=TwoWay}"
                                       IsVisible="False" >
                            <atom:RadioButton.IsEnabled>
                                <MultiBinding
                                    Converter="{x:Static atom:TreeViewItemTheme.TreeViewItemIndicatorEnabledConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsEnabled" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsIndicatorEnabled" />
                                </MultiBinding>
                            </atom:RadioButton.IsEnabled>
                        </atom:CheckBox>
                        <atom:RadioButton Name="ToggleRadio"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Grid.Column="1"
                                          IsChecked="{TemplateBinding IsChecked}"
                                          GroupName="{TemplateBinding GroupName}"
                                          IsVisible="False">
                            <atom:RadioButton.IsEnabled>
                                <MultiBinding
                                    Converter="{x:Static atom:TreeViewItemTheme.TreeViewItemIndicatorEnabledConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsEnabled" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsIndicatorEnabled" />
                                </MultiBinding>
                            </atom:RadioButton.IsEnabled>
                        </atom:RadioButton>

                        <atom:IconPresenter Name="{x:Static atom:TreeViewItemHeaderThemeConstants.IconPresenterPart}"
                                            Grid.Column="2"
                                            Icon="{TemplateBinding Icon}"
                                            IsEnabled="{TemplateBinding IsEnabled}"
                                            IsVisible="{TemplateBinding IconEffectiveVisible}" />
                        <Border Name="{x:Static atom:TreeViewItemHeaderThemeConstants.HeaderContentFramePart}"
                                Grid.Column="3" IsEnabled="{TemplateBinding IsEnabled}"
                                Cursor="Hand"
                                Background="{TemplateBinding ContentFrameBackground}">
                            <ContentPresenter Name="{x:Static atom:TreeViewItemHeaderThemeConstants.HeaderPresenterPart}"
                                              VerticalContentAlignment="Center"
                                              Content="{TemplateBinding Content, Converter={x:Static atom:TreeViewItemTheme.StringToTextBlockConverter}}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
        
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
        <Setter Property="Margin" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemMargin}}" />
        <Setter Property="CornerRadius"
                Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadius}}" />

        <Style Selector="^ /template/ atom|IconPresenter#PART_IconPresenter">
            <Setter Property="IconHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            <Setter Property="IconWidth" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeNodeIconMargin}}" />
        </Style>

        <Style Selector="^ /template/ Border#PART_HeaderContentFrame">
            <Setter Property="CornerRadius"
                    Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadius}}" />
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemHeaderMargin}}" />
            <Setter Property="Padding" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemHeaderPadding}}" />
        </Style>

        <Style Selector="^:not(^[NodeHoverMode=WholeLine])">
            <Setter Property="ContentFrameBackground" Value="Transparent" />
            <Style Selector="^ /template/ Border#PART_HeaderContentFrame">
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            <Style Selector="^[NodeHoverMode=Block]">
                <Style Selector="^ /template/ Border#PART_HeaderContentFrame">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
            </Style>

            <Style Selector="^[IsHover=True]">
                <Setter Property="ContentFrameBackground" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.NodeHoverBg}}" />
            </Style>

            <Style Selector="^[IsSelected=True]">
                <Setter Property="ContentFrameBackground"
                        Value="{DynamicResource {x:Static atom:TreeViewTokenKey.NodeSelectedBg}}" />
            </Style>
        </Style>

        <Style Selector="^[NodeHoverMode=WholeLine]">
            <Setter Property="Background" Value="Transparent" />
            <Style Selector="^ /template/ Border#PART_Frame">
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style Selector="^[IsHover=True]">
                <Setter Property="Background" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.NodeHoverBg}}" />
            </Style>
            <Style Selector="^[IsSelected=True]">
                <Setter Property="Background"
                        Value="{DynamicResource {x:Static atom:TreeViewTokenKey.NodeSelectedBg}}" />
            </Style>
        </Style>

        <Style Selector="^[ToggleType=CheckBox]">
            <Style Selector="^ /template/ atom|CheckBox#ToggleCheckbox">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
        
        <Style Selector="^[ToggleType=Radio][IsLeaf=True]">
            <Style Selector="^ /template/ atom|RadioButton#ToggleRadio">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>

        <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
            <Setter Property="Width" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
            <Setter Property="Height" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>

        <Style Selector="^[IsLeaf=True]">
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="Cursor" Value="Arrow" />
            </Style>
        </Style>

        <Style Selector="^[IsLeaf=True][IsShowLeafIcon=False], ^[IsLeaf=False]">
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="IsLeafIconVisible" Value="False" />
            </Style>
        </Style>

        <Style Selector="^[ToggleType=CheckBox], ^[ToggleType=Radio]">
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="Margin"
                        Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeNodeSwitcherMargin}}" />
            </Style>
        </Style>

        <Style Selector="^[IsDragging=True]">
            <Style Selector="^ /template/ Border#PART_Frame">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorPrimary}}" />
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDisabled}}" />
            </Style>
            <Style Selector="^ /template/ atom|IconPresenter#PART_IconPresenter">
                <Setter Property="Opacity" Value="0.3" />
            </Style>
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="Opacity" Value="0.3" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>