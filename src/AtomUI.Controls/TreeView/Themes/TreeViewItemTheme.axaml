<ControlTheme TargetType="atom:TreeViewItem"
              xmlns="https://github.com/avaloniaui"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:atom="https://atomui.net"
              x:Class="AtomUI.Controls.Themes.TreeViewItemTheme">
    <Setter Property="Template">
        <ControlTemplate TargetType="atom:TreeViewItem">
            <StackPanel Orientation="Vertical">
                <Border Name="{x:Static atom:TreeViewItemThemeConstants.FramePart}"
                        Focusable="True"
                        BorderThickness="{TemplateBinding DragFrameBorderThickness}">
                    <Grid Name="{x:Static atom:TreeViewItemThemeConstants.ItemsLayoutPart}"
                          ColumnDefinitions="Auto, Auto, Auto, *"
                          Margin="{TemplateBinding Level, Mode=OneWay, Converter={x:Static atom:TreeViewItemTheme.MarginMultiplierConverter}}">
                        <atom:NodeSwitcherButton
                            Name="{x:Static atom:TreeViewItemThemeConstants.NodeSwitcherButtonPart}"
                            Grid.Column="0"
                            Focusable="False"
                            IsMotionEnabled="{TemplateBinding IsMotionEnabled}"
                            IconMode="{TemplateBinding SwitcherMode}"
                            CollapseIcon="{TemplateBinding SwitcherCollapseIcon}"
                            ExpandIcon="{TemplateBinding SwitcherExpandIcon}"
                            LoadingIcon="{TemplateBinding SwitcherLoadingIcon}"
                            LeafIcon="{TemplateBinding SwitcherLeafIcon}"
                            IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
                            IsLoading="{TemplateBinding IsLoading}" />
                        
                        <atom:CheckBox Name="{x:Static atom:TreeViewItemThemeConstants.ToggleCheckboxPart}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Grid.Column="1"
                                       IsChecked="{TemplateBinding IsChecked, Mode=TwoWay}"
                                       IsEnabled="{TemplateBinding IsEnabled}"
                                       IsVisible="False" />
                        <atom:RadioButton Name="{x:Static atom:TreeViewItemThemeConstants.ToggleRadioPart}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Grid.Column="1"
                                          IsChecked="{TemplateBinding IsChecked}"
                                          GroupName="{TemplateBinding GroupName}">
                            <atom:RadioButton.IsVisible>
                                <MultiBinding
                                    Converter="{x:Static atom:TreeViewItemTheme.TreeViewItemRadioVisibleConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ToggleType" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ItemCount" />
                                </MultiBinding>
                            </atom:RadioButton.IsVisible>
                        </atom:RadioButton>
                        
                        <atom:IconPresenter Name="{x:Static atom:TreeViewItemThemeConstants.IconPresenterPart}"
                                            Grid.Column="2"
                                            Icon="{TemplateBinding Icon}"
                                            IsEnabled="{TemplateBinding IsEnabled}"
                                            IsVisible="{TemplateBinding IconEffectiveVisible}" />
                        <ContentPresenter Name="{x:Static atom:TreeViewItemThemeConstants.HeaderPresenterPart}"
                                          Grid.Column="3"
                                          Cursor="Hand"
                                          HorizontalContentAlignment="Left"
                                          VerticalAlignment="Center"
                                          VerticalContentAlignment="Center"
                                          IsEnabled="{TemplateBinding IsEnabled}"
                                          Content="{TemplateBinding Header, Converter={x:Static atom:TreeViewItemTheme.StringToTextBlockConverter}}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                    </Grid>
                </Border>
                <atom:MotionActorControl
                    Name="{x:Static atom:TreeViewItemThemeConstants.ItemsPresenterMotionActorPart}"
                    ClipToBounds="True"
                    IsVisible="False">
                    <ItemsPresenter Name="{x:Static atom:TreeViewItemThemeConstants.ItemsPresenterPart}"
                                    Focusable="False"
                                    ItemsPanel="{TemplateBinding ItemsPanel}" />
                </atom:MotionActorControl>
            </StackPanel>
        </ControlTemplate>
    </Setter>

    <Style Selector="^:is(atom|TreeViewItem)">
        <!-- BuildCommonStyle 开始 -->
        <Setter Property="EffectiveNodeCornerRadius"
                Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderRadius}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorBorder}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static atom:SharedTokenKey.BorderThickness}}" />
        <Setter Property="EffectiveNodeBg" Value="Transparent" />

        <Setter Property="TitleHeight" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
        <Style Selector="^ /template/ Border#PART_Frame">
            <Setter Property="Height" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemMargin}}" />
            <Setter Property="Padding" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemPadding}}" />
        </Style>
        <!-- 节点 Icon 的大小 -->
        <Style Selector="^ /template/ atom|IconPresenter#PART_IconPresenter">
            <Setter Property="IconHeight" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            <Setter Property="IconWidth" Value="{DynamicResource {x:Static atom:SharedTokenKey.IconSize}}" />
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeNodeIconMargin}}" />
        </Style>
        <!-- 设置 NodeHoverMode 为 Block 的情况 -->
        <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemHeaderMargin}}" />
            <Setter Property="Padding" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeItemHeaderPadding}}" />
        </Style>

        <Style Selector="^[NodeHoverMode=Block]">
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="{DynamicResource {x:Static atom:SharedTokenKey.FontSize}}" />
            </Style>
        </Style>

        <Style Selector="^:treenode-hover">
            <Setter Property="EffectiveNodeBg" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.NodeHoverBg}}" />
        </Style>

        <Style Selector="^:selected">
            <Setter Property="EffectiveNodeBg"
                    Value="{DynamicResource {x:Static atom:TreeViewTokenKey.NodeSelectedBg}}" />
        </Style>
        
        <Style Selector="^[ToggleType=CheckBox]">
            <Style Selector="^ /template/ atom|CheckBox#PART_ToggleCheckbox">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
        
        <!-- BuildCommonStyle 结束 -->
        <!-- BuildSwitcherButtonStyle 开始 -->

        <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
            <Setter Property="Width" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
            <Setter Property="Height" Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TitleHeight}}" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>

        <Style Selector="^[IsLeaf=True]">
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="Cursor" Value="Arrow" />
            </Style>
        </Style>

        <Style Selector="^[IsLeaf=True][IsShowLeafIcon=False], ^[IsLeaf=False]">
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="IsLeafIconVisible" Value="False" />
            </Style>
        </Style>

        <Style Selector="^[ToggleType=CheckBox], ^[ToggleType=Radio]">
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="Margin"
                        Value="{DynamicResource {x:Static atom:TreeViewTokenKey.TreeNodeSwitcherMargin}}" />
            </Style>
        </Style>

        <!-- BuildSwitcherButtonStyle 结束 -->

        <!-- BuildDraggingStyle 开始 -->
        <Style Selector="^[IsDragging=True]">
            <Style Selector="^ /template/ Border#PART_Frame">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorPrimary}}" />
            </Style>
        </Style>
        <!-- BuildDraggingStyle 结束 -->

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static atom:SharedTokenKey.ColorTextDisabled}}" />
            </Style>
            <Style Selector="^ /template/ atom|IconPresenter#PART_IconPresenter">
                <Setter Property="Opacity" Value="0.3" />
            </Style>
            <Style Selector="^ /template/ atom|NodeSwitcherButton#PART_NodeSwitcherButton">
                <Setter Property="Opacity" Value="0.3" />
            </Style>
        </Style>
    </Style>

</ControlTheme>